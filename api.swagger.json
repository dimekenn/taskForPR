{
  "swagger": "2.0",
  "info": {
    "title": "server.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Create user",
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateUserRes"
            }
          },
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/protoCreateUserRes"
            }
          },
          "404": {
            "description": "User exists",
            "schema": {
              "$ref": ".proto.ErrorNotFound"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": ".proto.Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateUserReq"
            }
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Update user",
        "operationId": "UpdateUserByUUID",
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/protoUpdateUserByUUIDRes"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": ".proto.ErrorNotFound"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": ".proto.Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateUserByUUIDReq"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/users/{uuid}": {
      "get": {
        "summary": "Get user",
        "operationId": "GetUserByUUID",
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/protoGetUserByUUIDRes"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": ".proto.ErrorNotFound"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": ".proto.Error"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "protoCreateUserReq": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoCreateUserRes": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        }
      }
    },
    "protoGetUserByUUIDRes": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "created_date": {
          "type": "string"
        }
      }
    },
    "protoUpdateUserByUUIDReq": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoUpdateUserByUUIDRes": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
